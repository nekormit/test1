/*
RMIT University Vietnam
Course: COSC2430 Web Programming
Semester: 2023A
Assessment: Assignment 1
Author: Tran Nhat Minh
ID: s3977767
Acknowledgement: Acknowledge the resources that you use here.
*/

@import url('https://fonts.googleapis.com/css?family=Spartan&display=swap');

:root {
  --form-bg: #f8f4e5;
  --form-border: #f45702;
  --form-shadow: #dfae4b;
  --form-focus: #6bd4b1;
  --font-size: 12pt;
  --font-face: 'Spartan';
  --font-color: #fff;
  --black: #2D3137;
  --green: #329E78;
  --border-radius: 3px;
}

* {
  margin: 0;
  padding: 0;
}

.contact-us body {
  display: flex;
  width: 100vw;
  min-height: 100vh;
  align-items: center;
  justify-items: center;
  font-size: var(--font-size);
  font-family: var(--font-face);
  color: var(--font-color);
}

.contact-us {
  background: var(--form-bg);
  width: 100%;
  padding: 50px 100px;
  border-top: 10px solid var(--form-border);
}

label, input, textarea, select {
  display: block;
  width: 100%;
  font-size: var(--font-size);
  line-height: calc(var(--font-size) * 2);
  font-family: var(--font-face);
  align-content: center;
}

input, select {
  margin-bottom: calc(var(--font-size) * 2);
}

select {
  padding: 10px;
}
option {
    justify-content: center;
}

.contact-us h3 {
  font-weight: normal;
  font-size: 10pt;
  line-height: calc(var(--font-size) * 2);
  font-style: italic;
  margin: 0 0 0.5em 0;
}

.contact-us span {
  font-size: 8pt;
}

.contact-us em {
  color: var(--form-border);
  font-weight: bold;
}

input, textarea, select {
  border: none;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 2px;
  background: var(--form-bg);
  padding-left: 5px;
  outline: none;
}

input:focus, textarea:focus, select:focus {
  border: 1px solid var(--form-focus);
}

textarea {
  resize: none;
}

.button-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
  }
  
  .contact-us button {
    display: flex;
    justify-content: center;
    line-height: calc(var(--font-size) * 2);
    padding: 0 20px;
    border: none;
    border-radius: 30px;
    background: var(--form-border);
    color: white;
    transition: 0.2s all ease-in-out;
    border-bottom: 2px solid transparent;
    outline: none;
    width: 100px;
    letter-spacing: 2px;
    cursor: pointer;
  }

  @media (max-width: 768px) {
    .contact-us button {
      width: 100%;
    }
  }

.contact-us button:hover {
  background: inherit;
  color: var(--form-border);
  border-bottom: 2px solid var(--form-border);
}

::selection {
  background: rgb(255, 199, 184);
}

input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus {
  border: 1px solid var(--form-focus);
  -webkit-text-fill-color: var(--font-color);
  -webkit-box-shadow: 0 0 0px 1000px var(--form-bg) inset;
  transition: background-color 5000s ease-in-out 0s;
}

.styled-input-single {
    position: relative;
    padding: 20px 0 20px 40px;
    text-align: left;
}
  
.styled-input-single label {
    cursor: pointer;
}
  
.styled-input-single label:before,
.styled-input-single label:after {
    content: '';
    position: absolute;
    top: 50%;
    border-radius: 50%;
}
  
.styled-input-single label:before {
    left: 0;
    width: 30px;
    height: 30px;
    margin: -15px 0 0;
    background: #f7f7f7;
    box-shadow: 0 0 1px grey;
}
  
.styled-input-single label:after {
    left: 5px;
    width: 20px;
    height: 20px;
    margin: -10px 0 0;
    opacity: 0;
    background: #37b2b2;
    transform: translate3d(-40px, 0, 0) scale(0.5);
    transition: opacity 0.25s ease-in-out, transform 0.25s ease-in-out;
}

/* Input styles for radio and checkbox */
input[type="radio"], input[type="checkbox"] {
  position: absolute;
  top: 0;
  left: -9999px;
  visibility: hidden;
}

input[type="radio"]:checked + label::after, input[type="checkbox"]:checked + label::after {
  transform: translate3d(0, 0, 0);
  opacity: 1;
}


